--[[スクリプト制御用のやつらです。プログラム書ける人は
スクリプト使うよりも、こっちを改良したほうがいいかも。]]


--ぶつぶつ波形
div=1
buf={}
b=obj.getaudio(buf,"audiobuffer","spectrum",div)

for c=0,5 do
l=c*50
n=c*5+1
for i=0,n-1 do
  r=360*i/n
  x= math.sin(r*math.pi/180)*l
  y=-math.cos(r*math.pi/180)*l
  rz=360*i/n

  size=buf[1]/(50*c+100)
  if(size<=10)then
  size=10
  end

  obj.load("figure","円",0xff,size)
  obj.effect("色調補正","色相",size)
  obj.draw(obj.ox+x,obj.oy+y,0,1,1,0,0,rz)
end
end

obj.load("tempbuffer")





--音の大きさをはかるやつ。数値がでできます。
div=1
buf={}
b=obj.getaudio(buf,"audiobuffer","spectrum",div)
obj.load(string.format("%05d",buf[1]))





--カウント(複数桁非対応)
local b=0.3--数字が変化する間隔
local size=200--最大サイズ
local xx=0--xへの移動距離
local yy=0--yへの移動距離
local a=obj.time/b%10
if (a==10) then a=0 end
if(0.2>=(obj.time%b))then--アニメーションの間隔は0.2秒
 size=(size/0.2)*(obj.time%b)
end
obj.setfont("メイリオ",size)
obj.load(string.format("%d",a))
obj.draw(obj.ox+xx,obj.oy+yy)





--円波形(没案)
div=50
buf={}
b=obj.getaudio(buf,"audiobuffer","spectrum",div)

obj.setoption("drawtarget","tempbuffer",1000,1000)
obj.load("figure","円",0xff,0)
obj.draw(obj.ox,obj.oy)

for i=0,(b-1)/2 do
  l=buf[1+i]/30+100
  r=360*i/b
  x= math.sin(r*math.pi/180)*l
  y=-math.cos(r*math.pi/180)*l
  rz=360*i/b

  obj.setoption("drawtarget","tempbuffer")
  obj.load("figure","円",0xfff,20)
  obj.draw(obj.ox+x,obj.oy+y,0,1,1,0,0,rz)
end

for i=0,(b-1)/2 do
  l=buf[1+i]/30+100
  r=360-360*i/b

  x= math.sin(r*math.pi/180)*l
  y=-math.cos(r*math.pi/180)*l
  rz=360*i/b

  obj.setoption("drawtarget","tempbuffer")
  obj.load("figure","円",0xfff,20)
  obj.draw(obj.ox+x,obj.oy+y,0,1,1,0,0,rz)
end

obj.load("tempbuffer")





--ブロックグリッチみたいなやつ。単体で使うとゴミ。色ずれしたやつを重ね掛けするといいかも。
obj.effect("オブジェクト分割","横分割数",16,"縦分割数",9)
for i=0,obj.rand(0,100) do
if obj.index==obj.rand(0,99) then
obj.alpha=0
end
end
obj.ox=obj.rand(-10,10)+obj.ox





--キューブ
a=200
obj.drawpoly(-a,-a,-a,
a,-a,-a,
a,a,-a,
-a,a,-a)
obj.drawpoly(a,-a,-a,
a,-a,a,
a,a,a,
a,a,-a)
obj.drawpoly(a,-a,a,
-a,-a,a,
-a,a,a,
a,a,a)
obj.drawpoly(-a,-a,a,
-a,-a,-a,
-a,a,-a,
-a,a,a)
obj.drawpoly(-a,a,a,
a,a,a,
a,a,-a,
-a,a,-a)
obj.drawpoly(-a,-a,a,
a,-a,a,
a,-a,-a,
-a,-a,-a)







--退場用シーンチェンジ(オブジェクト分割を縦10横10で先にかけてから使う)
for i=0,obj.num-1 do
if(obj.index==i)then
obj.drawpoly(-96+obj.time*100,-54,0,96,-54,0,96,54,0,-96,54,0)
end
end





--退場用ランダム移動変化(オブジェクト分割を先にかけてから使う)
obj.ox=obj.ox-obj.rand(0,500*obj.time)




--角丸にしたかったやつ
size=500
w=obj.screen_w/2-size/2
h=obj.screen_h/2-size/2
obj.effect("マスク","x",w,"y",h,"サイズ",size,"type",1)
obj.effect()
obj.draw(-w,-h)




--なんかへんな動きをする。（個別オブジェクト用）
l=50*obj.index
r=360/obj.index*obj.time
obj.ox=math.sin(r*math.pi/180)*l
obj.oy=math.cos(r*math.pi/180)*l
obj.rz=obj.rz

--へんな模様を作れる(円の大きさは10ぐらい？)
for i=0,10000 do
xx=3*i-obj.time*100
yy=math.sin(xx)+math.cos(xx)
obj.draw(xx,yy*100)
end